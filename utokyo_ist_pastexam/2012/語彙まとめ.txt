　■プログラミング用語■
・クロージャ
プログラミング言語における関数オブジェクトの一つ。
クロージャをサポートした言語では、関数の中に関数を定義することができる。
その際に外側の関数で宣言された変数を内側の関数で操作することができる。
例えばこの場合、関数内に定義された関数のことをクロージャと呼ぶ。
このようにすることにより、グローバル変数の削減をすることができる。

・静的スコープ
プログラミング言語におけるスコープの一種。
もし変数がある関数の中で定義されたとすると、その関数の中のみでその変数は有効な値として定義される。
例えば、ある関数def f(): x=1 という関数を定義した際に、関数の外からxを出力しようとしてもエラーが発生する。
これは、このローカル変数xは関数f()の中でのみ有効であるからである。
静的スコープの対になる動的スコープではxが利用可能である。

・動的スコープ
プログラミング言語におけるスコープの一種である。
ある関数内で定義された変数を関数の外からも呼び出し利用することができる。
例えば、ある関数def f(): x=1 という関数を定義した際に、関数の外からxを出力しようとしてもxを出力することができる。
これは、このローカル変数xは関数f()の外からでも有効であるからである。
動的スコープの対になる静的スコープではxが利用不能である。

・値渡し参照渡し
値渡しとは関数の実行時に引数の値がコピーされ独立の変数として関数内で利用されることである。
そのため、変数を渡したとしても元の変数が変更されることはない。
これは、関数が副作用を持たないという観点から計算を中心とする言語では望ましい動作になる。

参照渡しは変数に対するアドレス情報を渡す方法である。
これを行うことで引数の値に直接操作を加えることができる。
値私と同じ動作を行うためにはあらかじめ変数をコピーして渡す必要がある。

・論理プログラミング
計算機のプログラムを数理論理学の概念を用いて表現するプログラミングパラダイムであり、
数学的背景として証明論とモデル理論を持つ。論理型プログラミング言語では一階述語論理式のうち
ホーン節と呼ばれる論理式を扱うことができ、推論機能を持っていることを特徴とする。
論理型プログラミング言語として代表的なものにPrologがある。

・関数型プログラミング言語
関数型プログラミング言語は複数の式を関数の適用によって組み合わせていくプログラミングスタイルである。
関数型プログラミングは数学の理論を発端としている。
例えば1から10までの整数を足し合わせるプログラムを考えるとき、
手続き型プログラミング言語ではループを使って足し合わせていくのに対し、関数型プログラミングでは関数の再帰呼び出しを使う。

・構造化プログラミング
個々の処理を小さな単位に分解し、階層的な構造にしてプログラミングすること。
構造化プログラミングでは、プログラムの構造が明確になり、アルゴリズムの間違いを減らすことができる。
また、大規模なプログラムを分担して作成することもできる。
現在では構造化プログラミングを発展させたオブジェクト指向プログラミングが主流となっている。オブジェクト指向プログラミングの例としてはpythonなどがある。

・アジャイルソフトウェア開発
ソフトウェア工学において迅速かつ適応的にソフトウェア開発を行う軽量な開発手法群の総称である。
アジャイルソフトウェア開発手法の多くは、1~4週間のイテレーションと呼ばれる短い期間単位を採用することで、
利用可能なシステムを早期に構築し、継続的に改良を行う。
これにより、従来のウォーターフォールモデルであるような長い開発期間の終盤に行う複雑で大規模な
テストが起因するプロジェクトの失敗のリスクを下げることができる。

・逆ポーランド記法
数式やプログラムの記法の一種。演算子を被演算子の後にすることから後置記法とも言われる。
例えば3と4を加算するという演算を、一般的に数式で用いられる中置記法で記述すると以下のようになる。
3+4
一方、逆ポーランド記法では加算を表す演算子+を被演算子である3と4の後において以下のように記述する。
34+
元々、ポーランド記法をコンピュータでの利用に適した形に改変したものである。

・リンカ
機械語のプログラムの断片を結語し実行可能なプログラムを作成するプログラムのことである。
例としてはC言語ではソースファイルをコンパイルするとオブジェクトファイルが生成される。
それに他のオブジェクトファイルやライブラリを結合して一つのプログラムが完成する。
静的リンクの場合、下記の処理が行われる。
オブジェクトファイルの連結→ライブラリ内のファイル連結→OS固有コード追加→アドレスの解決

・メタプログラミング
プログラミング技法の一つでロジックを直接コーディングするのではなく、
データとしてプログラム自体を処理できるプログラムをコーディングすること。
プログラムからプログラムを読んだり分析したりすることである。
これを行うことにより、同じ目的のものを実行するのに必要なソースコードの行数を減らすことができる。

・高階関数[x]
関数を引数にしたり、関数を戻り値とするような関数のことである。
高階関数は主に関数型言語やその背景理論であるラムダ計算において多用される。
例えばpythonにおける高階関数としてmap関数が挙げられる。
map(int,input().split())の記述をすると、標準入力で受け取られるオブジェクトの一つ一つに対して、整数型に変換される関数intが反映される。

・ラムダ計算[x]
計算模型の一つで、計算の実行を関数の引数への評価と適用としてモデル化・抽象化した計算体系である。
ラムダ計算は一つの計算規則と一つの関数定義規則のみを持つ。
例えば、ある数に2を加える関数fを考える。通常であればf(x) =x+2のように書くが、ラムダ計算ではλx.x+2とかく。
LISPやHaskellなどの関数型プログラミング言語の理論的基盤としてその誕生に大きな役割を果たした。


・論理プログラミング[x]
計算機のプログラムを数理論理学の概念を用いて表現するプログラミングパラダイムであり、数学的背景として証明論とモデル理論を持つ。論理型プログラミング言語では一階述語論理式のうちホーン節と呼ばれる論理式を扱うことができ、推論機能を持っていることを特徴とする。論理型プログラミング言語として代表的なものにPrologがある。

・Unicode
Unicodeとは、世界中で用いられるすべての文字を共通の方法で符号化して扱うための標準規格であり、MacOS、Windows、UNIXなどで使われている。
Unicodeでは、文字に非負整数値が割り振られており、Unicodeスカラ値を文章中に記す場合などは”U+”のあとに16進数ほうでその値を続けることで表す。
はじめは2バイトで全ての文字を表現することを目指していたが、現在では4バイトで定義されている。

・参照透明性
プログラミング言語の概念の一種で、その式をその式の値に置き換えてもプログラムの振る舞いが変わらないことを言う。
変数の値は最初に定義した値と常に同じであり、関数は同じ変数を引数として当てられれば同じ値を返す。
参照透明性のある言語のことを参照透明であるといい、Haskellが該当する。

・WebシステムにおけるCGI（common gateway interface）[x]
ウェブサーバー上でwebブラウザなどからの要求に対してプログラムを起動するための仕組み。プログラムファイルのおかれているURLにクライアントがアクセスすると、サーバー内部でそのプログラムが起動され、実行結果がクライアントに送信される。アクセス時にクライアント側からデータを送信することもでき、起動されたプログラムがデータを受け取って処理内容に反映させたりサーバー内部に保存したりすることができる。

・プログラミングにおけるリフレクション
プログラミングの分野で、プログラムの実行時にプログラムの構造や構成要素（クラス、メソッドなど）についての情報を取得したり、
プログラムの動作を動的に変更したりすること。
実行時にオブジェクトのクラス名を文字列データとして取得したり、
文字列変数に格納されたメソッド名を用いてオブジェクトのメソッドを呼び出したりする機能のことを指す。

・B木
木構造からなるデータ構造の一つ。
通常の二分木と違い、一つのノードから複数分岐している平衡木であり、
階層の深さが同じになるようにノードの分割と併合を行う。
ブロック単位のランダムアクセスが可能な補助記憶装置上に木構造を実装するのに適している。
また、データベース管理システムの多くはB木による索引を実装している。


■セキュリティ■
・SQLインジェクション
アプリケーションのセキュリティ上の不備を意図的に利用し、
アプリケーションが想定しないSQL文を実行させることにより、データベースシステムを不正に操作する攻撃方法のこと。
例えば次のようなSQLを発行することを考えた時、その条件は常に真になるので全レコードが取得できてしまう。
SQL*FROM users where name='t' OR 't'='t'
対策として、入力の際に半角英数字のみを受け付けるようにすれば「'」の入力を防ぐことができる。

・セッションハイジャック
ネットワーク通信におけるセッション（特定利用者間で行われる通信群）を、通信当事者以外が乗っ取る攻撃手法である。
通信の当事者でない第三者が何らかの手段でセッションを識別するセッションIDを知ることにより、セッションを乗っ取る攻撃手法を指す。
これを悪用すると、例えばユーザが銀行のシステムにログインして利用しているセッションを乗っ取り、
ユーザの口座から攻撃者の口座に不正に振り込みを行う、といった事ができてしまう可能性がある。
対策として、開発の際にwebアプリケーションのhidden フィールドにセッションIDを含める方法などがある。

・クロスサイトスクリプティング
webアプリケーションの脆弱性を利用した攻撃。
攻撃者の作成したスクリプトを脆弱性のある標的サイトのドメイン権限において閲覧者のブラウザで実行させる攻撃一般を指す。
スクリプトが実行されることにより、不正プログラムの感染、ユーザーを騙す表示によるフィッシング詐欺、クッキー情報の取得によるセッションハイジャックなどにつながる。
ユーザーの対策として、ブラウザのアップデートや不審なURLを安易にクリックしないことが挙げられる。

・クロスサイトリクエストフォージェリ
Webアプリケーションの脆弱性の一つを利用した攻撃。
攻撃者が捏造したフォームから強制的にリクエストをWebサーバーにサブミットすることで、
例えば掲示板に意図しない書き込みをされたり、強制的に買い物をさせられたりする攻撃のこと。
利用者側の対策として、必要な手続きを済ませた際にはログアウトしてセッションを破棄することが考えられる。

・Dos攻撃
情報セキュリティにおける可用性を侵害する攻撃手法のひとつ。 
ウェブサービスを稼働しているサーバやネットワークなどのリソース（資源）に意図的に
過剰な負荷をかけたり脆弱性をついたりする事でサービスを妨害する。
例えば、ウェブブラウザに備わっているページ再読み込み機能を使用し、webサーバーに大量のリクエストを送りつけることが当てはまる。開発側の対策として、特定のIPアドレスからのアクセスを停止するなどの手法がある。

・公開鍵暗号を用いたデジタル署名法
書面上の手書き署名のセキュリティを模倣するために用いられる技術の一種である。
①鍵ペアを生成する鍵生成アルゴリズム
②利用者の秘密鍵を用いて署名を生成するアルゴリズム
③利用者の公開鍵を用いて署名を検証するアルゴリズムの　3つからなっている。
デジタル署名では、その署名に用いられる秘密鍵の所有権が特定の利用者へ結び付けられるときは、
その文書が利用者から送信されたことを示すため、電子メールや契約書などの発信元を認証する事に使うことができる。

・公開鍵基板
公開鍵暗号方式や電子署名方式で用いる公開鍵とその持ち主の対応関係を保証するための仕組みである。
本当に相手のものであるかを認証局という第三者機関を用いることで保証する。
例えば、ある公開鍵基板利用者Aが別の利用者Bの公開鍵が本当にBのものであるかを確認する。
その場合にはBに対する公開鍵証明書を入手し、次に公開鍵証明書を発行した認証局Cに対する公開鍵と公開鍵証明書を入手する、同様に繰り返し、最後にトラストアンカーと呼ばれるPKIにおける最も信頼できると思われる認証局Zまでたどり着き、しかもそれまでに入手した公開鍵証明書が正当なものであれば、公開鍵BをBの公開鍵として受理する。

・認証局の役割
他の当事者にデジタル公開鍵証明書を発行する実体である。
公開鍵証明書には公開鍵と持ち主の記載があり、記載された当事者がこの公開鍵に対応した私有鍵の持ち主だと証言する。
このスキームにおけるCAの役割は、発行した証明書にある情報を利用者が信頼できるよう申請者の身分を確認することである。
もし利用者がCAを信じ、かつCAの署名が検証できたならばその証明書で特定されるものが公開鍵を検証できたことになる。

・ゼロデイ攻撃
脆弱性が発見されて修正プログラムが提供される日より前に
その脆弱性を攻略する攻撃は、ゼロデイ攻撃と呼ばれている。
アメリカ政府の支援を受けた非営利団体MITREにより脆弱性の共通となる識別子を付与し公開する試みが行われており、
脆弱性に関する情報共有が進められ、パッチ作成時間などを短縮できるようになっている。


■画像
・ラスタースキャン
二次元の画像をまず点で一次元的にスキャンして線を得て、ついでその直角方向にスキャンして二次元の面で画像を得る方法である。
入力においては画像は走査線に沿って読み取られ、デジタル機器であれば標本化され、画素に格納される。
出力においては同じ順番で点を戻しながら走査し、走査線が表示される。
各走査線の最後の位置に来た時に次の走査線に移る。このような処理を繰り返して一枚の画像が保存される。

・ハフ変換
デジタル画像処理で用いられる特徴抽出法の一つである。
ハフ変換はエッジ抽出アルゴリズムに対してもよく使われる。
任意の直交座標上の画像を極座標の二次元空間や三次元空間にr,θのパラメータを用いた曲線を描画し、
曲線の交差する頻度の高い点を求め　逆変換することで直線や円を検出する手法である。

・ガウシアンフィルタ
画像処理においてガウス関数を用いて画像をぼかす処理である。
標準偏差σのガウシアンフィルタとはn次元の入力画像に対してn次元ガウス関数の畳み込み和をとることである。
ガウス分布を用いて近傍画素値に重み付けを行うことで標準偏差σが大きくなるほど注目画素の平滑化の効果が大きくなる。
デジタルカメラなど撮像画像などからノイズを除去したり、エッジ抽出の前処理に応用できる。

・不変特徴量
不変特徴量はなんらかの条件の変化に対しても不変な特徴のことである。
例えば、SIFTと呼ばれるスケール不変特徴変換では、画像のスケールの拡大拡小にたいして、画像が不変である。
したがって、ある画像がIがあったとすると、それをそのまま拡大した画像I'についても、SIFTは同じ特徴を持って変換を行うことができる。

・オプティカルフロー
オプティカルフローとは、視覚表現の中で物体の動きをベクトルで表したものである。
視覚表現は通常時間的に連続するデジタル画像のことを意味する。
その抽出にはブロックマッチング法、勾配法などが用いられる。
オプティカルフローは、パターン認識、コンピュータビジョンあるいは他の画像処理技術において利用されている。

・レイトレーシング
光線などを追跡することで、ある点において観測される像などをシミュレートする手法である。
ある点に届く光線・波線・音線などを逆にたどることによって、その点における画像などを描画する。
この手法では反射や屈折は忠実に再現できるが、回折は近似やモデリングを必要とし、計算量は多くなる。
レイトレーシングは実写では再現不可能な映画の特殊効果などに使用されている。

・フォトンマッピング
コンピュータグラフィックスにおける大域照明アルゴリズムの一つ。
フォトンマッピングでは、まず光源から放たれる光線と、カメラからの光線が、
一定の臨界値に到達するまでそれぞれ独立して追跡され、その後放射値（フォトンマップ）を生成するための第2ステップで結合される。
これにより、ガラスや水などの透明な物質を光が透過する際の屈折現象などをシミュレートすることが可能となる。

・ラジオシティ
3次元コンピュータグラフィックスのレンダリングにおける、グローバル・イルミネーションの計算法のひとつである。
光源の側から、光として発せられたエネルギーの行方を熱力学的に処理することで、
複数の物体が光を乱反射させて、お互いを照らす効果などが計算できる。
たとえば壁紙が赤いために部屋にあるものが赤く見えるといった効果がより現実的に再現できる。
この方法を用いると柔らかな陰影が表現でき、特に室内などの風景で画像の写実性が高くなる。

・ハフ変換
デジタル画像処理で用いられる特徴抽出法の一つである。
ハフ変換はエッジ抽出アルゴリズムに対してもよく使われる。
任意の直交座標上の画像を極座標の二次元空間や三次元空間にr,θのパラメータを用いた曲線を描画し、
曲線の交差する頻度の高い点を求め　逆変換することで直線や円を検出する手法である。

・GIF
可逆圧縮形式の画像化方法。色を光の三原色の強さで表現し、
全ての入力可能な文字で辞書を初期化する
現在の入力文字列と最も長く一致する文字列wを辞書から探す
出力にwの辞書のインデックスを総収し、wを入力文字列から削除する
入力で後ろに続く1文字sを付け足したW+sを辞書に追加する

■機械学習■
・K近傍法
k近傍法は、特徴空間における最も近い訓練例に基づいた分類の手法でありパターン認識でよく使われる。
最近傍探索問題の一つ。k近傍法は、インスタンスに基づく学習の一つであり、怠惰学習の一種である。
その関数は局所的な近似に過ぎず、全ての計算は分類時まで後回しにされる。また、回帰分析にも使われる。

・決定木
機械学習の予測モデルであり、ある事項に対する観察結果から、その事項の目標値に関する結論を導く。
内部節点は変数に対応し、子節点への枝はその変数の取り得る値を示す。 
葉は、根からの経路によって表される変数値に対して、目的変数の予測値を表す。
データから決定木を作る機械学習の手法のことを決定木学習という。
その分類に至る過程の解釈が容易であるために、データマイニングで使われる。

・決定木の学習法[x]
決定木の学習では訓練データを何らかの指標に基づいて幾つかの集合に分割し、分割したそれぞれのデータを部分木とする木を作成する。それぞれの部分木に対しても再帰的に分割を行い、最終的な木構造を得る。
良い決定木を得るためには訓練データの分割の指標の定め方が問題となる。この指標の定め方には様々な種類があり、例えばID3やC4.5と呼ばれる手法では情報量(エントロピー)を基に指標を定める。

・カーネル法
パターン認識において使われる手法の一つで、判別などのアルゴリズムに組み合わせて利用されるものである。
データを高次元の特徴空間に写像することにより、データの集合はユークリッド空間中の点の集合に変換される。
カーネル法の由来であるカーネル関数を用いて、特徴空間における座標の計算を経ずにデータの内積を計算することで、
計算複雑度を抑えつつ内積に基づく解析手法を高次元空間へ拡張する。
よく知られているものに、サポートベクターマシンと組み合わせて利用する方法がある。

・サポートベクタマシン
教師あり学習を用いるパターン認識モデルの一つであり、分類や回帰に適用できる。
線形入力素子を利用して2クラスのパターン識別器を構成する。
訓練サンプルから各データ点との距離が最大となるマージン最大化平面を求めるという基準で線形入力素子のパラメータを学習する。
学習過程はラグランジュの未乗数法とKKT条件を用いることにより最適化問題の一種である凸二次計画問題として定式化される。

・ロジスティック回帰
ベルヌーイ分布に従う変数の統計的回帰モデルの一種で、連結関数としてロジットを使用する。
ロジスティック回帰モデルは以下のような形式である。
xが入力、pが出力確率、αβがパラメータである。

応用分野としてダイレクトマーケティングや企業の信用リスク推定などがある。

・ランダムフォレ
機械学習のアルゴリズムの一種であり、分類・回帰・クラスタリングに用いられる。
決定木を弱学習器とするアンサンブルメソッドであり、ランダムサンプルされた訓練データによって多数の決定木を使用する。
長所として、独立な決定木の並列処理が可能であること、学習や評価が高速なことなどがある。
ランダムフォレストをさらに多層にしたディープフォレストなどの手法も提案されている。

・バギング
回帰および分類で使われる機械学習アルゴリズムの安定性と精度を
高めるために設計された機械学習アンサンブルメタアルゴリズム。
学習データの一部のみを使用して学習し最後に結合させることで並列処理が可能になる。
バギングは分散を縮小させ過剰適合を避けることもできる。有名なアルゴリズムとしてフォレストがある。

・ブースティング
教師あり学習を実行するための機械学習のメタアルゴリズムの一種である。
一連の弱い学習機を繰り返し学習させてそれをまとめることで、強い学習機を生成する。
ただし弱い学習とは真の分類と若干の相関を持つ分類器であり、強い分類器とは真の分類と良く相関する分類器である。
有名なアルゴリズムとしてAdaBoostがある。


・グラフィカルモデル
グラフが確率変数間の条件付き依存構造を示しているような確率モデルである。
確率モデルの構造を視覚化する簡単な方法であり、そのグラフ構造を調べることで条件付き独立性などのモデルの性質を知ることができる。
また、推論や学習を実行するための複雑な計算をグラフ上の操作として表現することができる。
一般に確率・統計、機械学習などで用いられ、特にマルコフ確率場やベイジアンネットワークで用いられる。

・ベイジアンネットワーク
因果関係を確率により記述するグラフィカルモデルの一つである。
因果的な特徴を有向グラフによるネットワークとして表しその上で確率推論を行うことで、
複雑でかつ不確実な事象の起こりやすさを予測することができる。
有向グラフを用いずに無向グラフで表現する方法はマルコフ確率場と呼ばれる。
言語認識やイメージ認識などで応用される。


・マルコフ確率場
無向グラフで表現されるようなマルコフ性のある確率変数の集合のこと。
確率の依存関係の表現の仕方はベイジアンネットワークと似ているが、
マルコフ確率場は無向で巡回していても構わない。
このことにより、確率の依存関係が巡回している場合の確率構造を表すこともできる。
マルコフ確率場は画像のノイズ除去などに応用される。

・マルコフ連鎖
確率過程の一種であるマルコフ過程のうち、取りうる状態が離散的なものをいう。
マルコフ連鎖は、未来の挙動が現在の値だけで決定され過去の挙動と無関係である。
各時刻において起こる状態変化に関して、マルコフ連鎖は遷移確率が過去の状態によらず、現在の状態のみによる系列である。
マルコフ連鎖は待ち行列理論や強化学習で用いられる。

・マルコフ決定過程
状態が確率的に遷移する動的システムの確率モデルであり状態遷移がマルコフ性を満たすものをいう。
各時刻においてある状態を取り、意思決定者はその状態においての行動を任意に選択する。
そのあと過程はランダムに新しい状態へと遷移し、意思決定者は状態遷移に応じた報酬を得る。
マルコフ決定過程は、不確実性を伴う意思決定のモデリングにおける数学的枠組みとして、
強化学習などの動的計画法が適用される幅広い最適化問題の研究に活用されている。


・TD学習
強化学習の一つであり、TD誤差が0に近くよう評価値を更新していく手法のこと。
TD誤差とはエージェントが行動する前後の評価値の誤差のことである。
評価値とはある行動が将来どのくらい報酬に結びつくかを反映した値である。
ある状態s1でaという行動をすれば報酬を獲得できたとするならば、a(s1)は報酬にありつける可能性の高い行動となる。
TD誤差が0に近づくことで行動前後の評価が一致することになり、局面ごとに最終的な報酬を最大化する行動をすることができるようになる。

・Q学習
Q学習は強化学習手法の方策オフ型TD学習の一つである。
Q学習では実行するルールに対しそのルールの有効性を示すQ値という値を持たせ、エージェントが行動するたびにその値を更新する。
ここでいうルールとは、ある状態とその状態におけるエージェントの行動を対にしたものである。
Q学習では一定の条件のもとで全てのQ値は確率1で最適値に収束するため、局面ごとにQ値の大きな行動が高確率で選ばれるように更新を行うことで最適な状態遷移の学習が行われる。

・強化学習
強化学習とは、ある環境内におけるエージェントが、現在の状態を観測し、取るべき行動を決定する問題を扱う機械学習の一種。
エージェントは行動を選択することで環境から報酬を得る。強化学習は一連の行動を通じて報酬が最も多く得られるような方策を学習する。
代表的な手法としてTD学習やQ学習が知られている。
最も基本的なモデルではここでの環境は、有限状態数のマルコフ決定過程として定式化される。
また、強化学習のアルゴリズムは動的計画法に類似したアルゴリズムである。

・隠れマルコフモデル
確率モデルの一つで、観測されない状態をもつマルコフ過程である。
同じマルコフ過程でもマルコフ連鎖では、状態が直接観測可能で状態の遷移確率がパラメータであるのに対して、
隠れマルコフモデルにおいては状態は直接観測されず、モデルの状態による確率分布に基づいた出力のみが観測される。
隠れマルコフモデルは、音声認識、バイフォインフォマティクス、形態素解析など時系列のパターン認識に応用されている。

・EMアルゴリズム
確率モデルのパラメータを最尤推定する手法の一つであり、観測不能な潜在変数に確率モデルが依存する際に用いられる。
反復法の一種であり、期待値ステップと最大化ステップを交互に繰り返すことで計算が進行する。
Eステップでは現在推定されている潜在変数の分布に基づいてモデルの尤度の期待値を計算する。
MステップではEステップで求まった尤度を最大化するようなパラメータを求める。
このパラメータは次のEステップで潜在変数の分布を決定するために用いられる。
機械学習、音声認識、因子分析などに応用されている。

・カルマンフィルタ
カルマンフィルタとは、誤差のある離散的な観測値から時間変化するシステムの現在の状態を推定する手法。
システムの現在の観測値と1ステップ前の推定値から、システムの現在の状態の推定値と1ステップ先の予測値を与える反復型の予測を行う。
カルマンフィルタは各ステップごとに予測と更新の二つを行う。予測では前ステップの推定値から現在の推定状態を計算し、
更新では現在の観測値を利用して推定値を補正してより正確な値に近づける。
例えばカーナビでは機器内蔵の加速度計や人工衛星からの誤差のある情報を統合して自動車の位置を推定するのに応用されている。


・ベクトル量子化
情報理論における量子化の手法の総称。
通常の量子化は標本化したアナログ信号の各サンプルに対して
最も近い離散値のデジタル符号に置き換えることで行われるのにたいして、
ベクトル量子化は複数のサンプルを取り込みそれをまとめて符号化する。
この複数データをベクトルとして扱うためにベクトル量子化と呼ばれる。
近年ではベクトルデータの次元を落とす方法として画像や音声の非可逆圧縮の作成に使われたりする。

・パーセプトロン
人工ニューロンやニューラルネットワークの一種である。
視覚と脳の機能をモデル化したものであり、パターン認識を行う。
シンプルなネットワークでありながら学習能力を持ち、一時ニューラルネットワークブームを巻き起こしたが、
ミンスキーらによって線形分離不能であることが指摘され一時下火となる。
その後変種のものが考案され現在広く使われるディープラーニングの基礎にもなっている。


・多層パーセプトロン
順伝播型ニューラルネットワークの一種である。
入力ノードを除けば、個々のノードは非線形の関数を使用するニューロンである。
多層パーセプトロンは、学習のためにバックプロパゲーションと呼ばれる教師あり学習を利用する。
その多層構造と非線形関数が多層パーセプトロンと線形パーセプトロンを区別している。
多層パーセプトロンは画像認識や音声認識に応用される。

・ニューラルネットワーク
脳の神経回路による計算をコンピュータで再現したものである。
ニューラルネットワークの学習モデルとして現在最も良く用いられるものの一つがバックプロパゲーションである。
バックプロパゲーションでは、入力から前向きにニューラルネットワークをたどりながら出力を求め、その結果と期待される出力の差が小さくなるように後ろ向きにニューラルネットワークをたどりながら各ニューロンの重みを更新する。

・ディープラーニング
多層のニューラルネットワークによる機械学習手法である。
4層以上の深層ニューラルネットは局所最適や勾配消失などの問題により性能も芳しくなかったが、
近年のジェフリーヒントンらによる学習の研究や学習に必要な計算機の能力向上などによって十分学習させられるようになった。
画像認識や音声認識に応用され、関連するモデルが次々に開発されている。

・畳み込みニューラルネットワーク
畳み込みニューラルネットワーク とは、順伝播型ディープニューラルネットワークの一種である。
画 像の局所的な特徴抽出を担う畳み込み層と、局所ごとに特徴をまとめあげるプーリング層 を繰り返した構造となっており、
パラメータの削減を行うとともに入力の微小な変化に対して不変性を持つことができる
脳の視覚野の研究から生まれたもので画像認識音声認識などで使われる。特に近年の学習アルゴリズムの発達により一部の複雑な視覚的タスクで人間を超える性能を達成できようになってきている。

・RNN
ニューラルネットワークの一種で、時系列データを扱うことのできるモデルである。前の時刻の隠れ層を次の時刻の入力と合わせて学習することによって前後の依存関係を考慮した推定ができる。
実際の応用例として、自然言語処理が挙げられる。「雲ひとつない晴天だ」という文章の「晴天」を予測したい時、「雲ひとつない」という単語列を中間層おぼび入力層に入れることによって「晴天」という単語の予測が可能になる。

・敵対的生成ネットワーク
教師なし学習で使用される機械学習アルゴリズムの一種であり、
生成ネットワークと識別ネットワークの2つのネットワークから構成される。
例えば、画像生成を目的とするならば、生成側がイメージを出力し、識別側がその成否を判定する。
生成側は識別側を欺こうと学習し識別側は正確に識別しようと学習する。
イアングッドフェローらによって発表された。

・活性化関数
ニューラルネットワークにおいて、線形変換をした後に適用する非線形関数または恒等関数である。
数式では下記のように表し、が活性化関数である。
ステップ関数、シグモイド関数、ソフトマックス関数、Reluなどがあるが現在ではReluがよく使われる。
Reluはジェフリーヒントンらによって提案された。

・ボルツマンマシン
ジェフリーヒントンらによって開発された確率リカレントニューラルネットワークの一種である。
ボルツマンマシンは、統計的な変動をもちいたホップフィールド・ネットワークの一種と見なすことができる。
しかし、規模の拡大とともに学習が行えなくなるという問題があり、 接続制限を持たないボルツマンマシンは
機械学習や推論のためには実用的であるとは証明されていない。
ボルツマンマシンの応用としてレコメンデーションや組み合わせ最適化問題がある。


・オートエンコーダ
機械学習においてニューラルネットワークを使用した次元圧縮のためのアルゴリズム。
3層ニューラルネットワークにおいて、入力層と出力層に同じデータを用いて教師あり学習させてものである。
2006年にイギリス出身のコンピュータ科学者ジェフリーヒントンらが提案した。
線形の次元圧縮としては主成分分析があるが、オートエンコーダではニューラルネットワークを使用するため非線形最適化問題となる。

・確率的勾配降下法
連続最適化問題に対する勾配法の乱択アルゴリズムである。
バッチ学習である最急降下法をオンライン学習に改良したもの。
目的関数の勾配近似を訓練データの一つずつから行うことでパラメータが局所会に陥ることを防ぐことができる。
確率的勾配法は機械学習や深層学習におけるパラメータの最適化でしばしば用いられる。

・バックプロパゲーション
機械学習においてニューラルネットワークを学習させる際に用いられるアルゴリズムである。
訓練データを用いてニューラルネットワークの出力値を求め、期待される出力値との誤差を計算し、これが小さくなるように出力側から入力まで反対向きに誤差を更新して行く。
ネットワーク上の重みについての誤差の傾斜を計算し、これを最小化するように確率的最急降下法などを用いて計算を行う。
バックプロパゲーションの限界として、ネットワーク中の一箇所にでも勾配が消失するとそれ以上学習が進まなくなってしまうため、層が増えると勾配消失を起こす可能性が高まる




・教師あり/なし学習
教師あり学習：
事前に与えられた訓練データを例題とみなしそれらに対して学習を行う。
典型的なものとして分類問題と回帰問題があり、与えられたデータに対してなんらかの基準を持ってy=f(x)を求めることである。
サポートベクタマシーン、バックプロパゲーションなどが教師あり学習である。

教師なし学習：
出力すべきものがあらかじめ決まっておらず、データの背後に存在する本質的な構造を抽出するために用いられる。
具体例としては、クラスター分析、主成分分析などがある。

・次元の呪い
空間の次元が増えるのに対して問題の算法が指数関数的に増えることである。
例えば単位空間をサンプリングするには100個の点を等間隔でかつ点間の距離を0.01以上にならないようにすれば十分である。
ところが同じようなサンプルを10次元の超立方体で行おうとすると必要な点は10^20になる。
機械学習では、有限この標本から自然の状態を学習しようとする際に、問題を複雑化する。

・主成分分析
相関のある多数の変数から相関のない少数で全体のばらつきを最も表す主成分と呼ばれる変数を合成する多変量解析の一手法。
データの次元を削減するために用いられる。
主成分を与える変換は、第一主成分の分散を最大化し、続く主成分は
それまでに決定した主成分と直交するという拘束条件のもとで分散を最大化するようにして選ばれる。
主成分の分散を最大化することは観測値の変化に対する説明能力を可能な限り主成分に持たせる目的で行われる。

・ビタビアルゴリズム
観測された事象系列を結果として生じる隠された状態の最も尤もらしい並びを探す
動的計画法アルゴリズムの一種であり、隠れマルコフモデルに基づいている。
ある時間tとともにある観測値があるとする。この一連の観測結果からこの観測値を出力した状態系列のうち尤もらしいものはどれであるかを推定するものである。（観測：読書→読書→読書。状態：雨→雨→雨。）
音声認識、自然言語処理、通信経路の誤り検出訂正などに使われている。

・tf-idf
文書中に含まれる単語の重要度を評価するための手法の一つであり、主に情報検索やトピック分析などの分野で用いられている。
tfidfは、tf：(単語の頻度)・idf：(逆文書頻度)の二つに基づいて計算される。
tfij=nij/Σnkj
idf= log|D|/|{d:d《t}|

nijは文章dijにおける単語の出現回数Σnkjは文書djにおけるすべての単語の出現回数の和、は|D|総文書数、は|{d:d含むt}|単語tiを含む文書数である。

・コーパス
言語学において自然言語処理の研究に用いるため自然言語の文章を構造化し大規模に集積したもの。
構造化した文章に品詞などの言語情報を付与している。





・ソフトマックス関数
ニューラルネットワークにおける活性化関数の一つで、多値分類をする時のそのクラスへの分類される確率を出力する。
yi=exp(ai)/Σexp(aj)の数式で示される。ここでyiは出力層のi番目のユニットの出力。Dは出力層のユニット数である。
分母に和の式を導入することで出力層の全てのユニットの出力の和をとると1になる。結果的にそのネットワークの出力があるクラスに属する確率を表すことができる。

・基底関数
基底関数とは函数空間の基底ベクトルのことである。
すなわち対象となる空間に属する全ての関数はこの基底関数の線型結合で表される。
例えば実数値函数のフーリエ変換ではコサイン函数もしくはサイン関数が基底関数として用いられる。

・フレーム問題
人工知能における重要な難問の一つで、有限の情報処理能力しかないロボットは
現実に起こりうる問題全てに対処することができないことを示すものである。
例えば洞窟の中にある、上に時限爆弾の乗ったバッテリーをロボットにとって来させることを考える。
この場合、①ロボットは爆弾と一緒にバッテリーを運んできてしまうし、
②目的遂行にあたっての副次的事項を考慮させると副次的に発生しうるあらゆることを思考し続けてしまうし、
③目的遂行に無関係なことを考慮しないようにすると目的に無関係なことは何かを無限に思考する。
つまり、思考すべき空間が有限でない限り、無限の可能性に潰え考えざるを得ないということを問題にしている。


■言語処理系■
文脈自由文法
形式言語の理論において全生成規則がV→wの形式を持つ形式文法である。
Vは非終端記号でwは終端文字と終端記号で構成される文字列である。
「文脈自由」という用語は前後関係に頼ることなく非終端記号のVをwに置換できるという意味であり、
文脈自由文法によって生成される形式言語を文脈自由文法という。

・構文解析
文章などの文字列を自然言語であれば形態素に切り分け、
さらに修飾被修飾などの形態素間の統語的な関係を図式化するなどの手続き。
プログラミング言語であればプログラム中に記述された文が
その言語の使用に適ったものであるかどうかをコンパイラが判別すること。
プログラミング言語などの形式言語の場合は形式文法に従い構文木を得る。

・形態素解析
自然言語のテキストデータから、対象言語の文法や辞書と呼ばれる単語の品詞等の情報に基づき、
形態素（言語で意味を持つ最小単位）の列に分割しそれぞれの形態素の品詞等を判別する作業のこと。
自然言語処理の分野における主要なテーマの一つであり、機会翻訳やかな漢字変換などに応用される。
例えば、「お待ちしております。」を形態素解析した場合には以下のような区分けになる。/お待ち/し/て/おり/ます/。

・チョムスキー標準形
形式言語の理論において、ある文脈自由文法Gのどの生成規則も次のいずれかで表される時のことをいう。
A→BC
A→a
ここで、ABは互いに異なる非終端記号、aは終端記号である。
空列を含まないどのような文脈言語Lに対してもLを生成するチョムスキー標準形の文脈自由文法Gが存在することが知られている。
CYKアルゴリズムなどの効率的なアルゴリズムの基礎となっている。

・正規言語と正規文法
正規文法とは全ての正規言語を記述することのできる形式文法であり、すべて文脈自由文法に包含される。
正規言語とは、有限オートマトンが受理可能な言語であり、正規表現で表すことが可能な言語である。
具体的には、文字集合Σ上の言語の集合が下記によって再帰的に定義される。
・空の言語0
・空文字言語{ε}
・a∈Σであるaについてそれだけを含む集合
・AとBが正規言語の時のA ∪ B、A・B、A*

・有限オートマトン[x]
有限個の状態と遷移と動作の組み合わせからなる数学的に抽象化された振る舞いのモデルである。
ある一連の状態をとった時にどのように論理が流れるかを調べることができる。
まずある時点で一つの「現在状態」を取り、何らかの条件により別の状態へと「遷移」する。
例えばカーラジオシステムでは、特定のラジオ局の放送を聞いている「状態」で次へのボタンを押すと、次のラジオ局へ遷移する。
一方で、CDプレイヤーシステムでは次へボタンは次のトラックへの移行を意味する。このように同じイベントに対してでも現在状態によって違う動作を引き起こす。
有限オートマトンは通信プロトコル、構文解析などで応用がある。

・プッシュダウンオートマトン
オートマトンの一種であり文脈自由言語を認識する抽象機械である。
通常のオートマトンと違い、①スタックを使い状態遷移を判断②動作の一部としてスタック操作ができる。

・実行時コンパイラ
実行時コンパイラとは、プログラムの実行時に、あらかじめ用意した中間コードを、プロセッサが実行可能な機械語にコンパイルすることである。
通常のコンパイラはソースコード（あるいは中間コード）から対象CPUの機械語への変換を実行前に事前に行い、これをJITと対比して事前コンパイラ と呼ぶ。プラットフォームに依存しない形式でプログラムを配布し、実行時にその環境に合ったコードに変換されるという利点は保ったまま、事前コンパイルした場合とほとんど変わらない実行速度を得ることができる。


・評価関数
コンピュータにゲームなどをプログラムさせる際に状態を評価し数値に変換する関数のこと。
局面の良し悪しを数値化し、それを元に行動を決定する。オセロなどの現実的なゲームでは
単純なアルゴリズムでは測れない要素が複雑に関係し合うために正確な局面の評価はできない。
そのため、行動ごとに枝分かれしていくゲーム木を作り、数手先の局面で評価関数を使用することにより行動を決定する方法が用いられる。



・ブートストラップ法　
ブートストラップ法は母集団の推定量の性質を、近似分布にしたがって標本化したときの性質を計算することで推定する手法である。
近似分布としては、測定値から求められる経験分布を用いるのが標準的である。また仮説検定に使う場合もある。
仮定される分布が疑わしい場合や、パラメトリックな仮定が不可能ないし非常に複雑な計算を必要とするような場合に、
パラメトリックな仮定に基づく推計の代わりに用いられる。

■ネットワーク■
・DNS
IPアドレスとそのドメイン名との対応関係を検索するディレクトリサービスである。
インターネットに接続されているコンピュータは固有のIPアドレスというそれぞれを識別するための
番号を持っているが、数字の羅列となるために覚えにくい。そこで、IPアドレスを人間が
覚えやすいようにドメイン名というものを考案し、ドメイン名からIPアドレスを正引きする役割を担うのがDNSである。



■確率・統計■
・ベイズの定理
確率および条件付き確率に関してP(A)>0の時、次が成り立つような条件付き確率に関する定理。
事象Bのベイズ確率について、
P(B)：事象Aが起きる前の事象Bの確率
P(B|A)事象Aが起きた後での
事象Bの確率
とする。
事象Aに関するあるデータが得られたとすると、それを反映し、尤度P(A|B)の乗算によって事象Bの確率は事前確率から事後確率へと更新される。
応用例としては迷惑メールの発見や分類といった作業のコンピュータを用いた自動か等のふるいわけにも利用されている。

・事後確率
条件付き確率の一種で、あるデータを考慮に入れた上である変数について知られている度合いを確率として表現する主観確率の一種である。
事象Aの確率(事前確率)をP(A)とし、条件Aの下で事象Bが成立する確率(事後確率・条件付き確率)をP(B|A)とする。
このとき、P(B|A)はP(A), P(B), P(A|B)を用いて次のように記述できる。
    P(B|A) = P(A|B) * P(B) / P(A)
ベイズの定理により事前確率に尤度関数の出力値をかけると事後確率が得られる。
（サイコロの例：2つのサイコロを振って「出た目の和が6である」というヒントを得た場合には、2の目が出た確率は2/5となる。これが事後確率である）

・尤度関数
統計学においてある前提条件に従って結果が出現する場合に、逆に観測結果から見て前提条件が〜であったと推定する最もらしさを表す数値を〜を変数とする関数として捉えたものである。
B=bであるということが確定しているときにAが起きる確率をとする。このとき逆にAが観察されていることを元にしてこの条件付き確率を変数bの関数として尤度関数という。

・中心極限定理
確率論統計学における極限定理の一つである。
「母集団の分布がどんなものであってもn個の標本平均の確率分布はnが十分に大きければ平均μ、分散σ^2/nの正規分布に近似できる」という定理である。例えば、世論調査における必要サンプルサイズの算出や選挙の出口調査による当選結果の予測に使われる。


・擬似乱数
乱数列のように見えるが、実際には確定的な計算によって求めている擬似乱数列による乱数。
擬似乱数列を生成する機器を擬似乱数列生成器、生成アルゴリズムを擬似乱数列生成法と呼ぶ。
真の乱数列は本来、規則性も再現性もないものであるため、本来は確定的な計算によって求めることはできない。
一方、擬似乱数列は確定的な計算によって作るので、その数列は確定的であるうえ、生成法と内部状態が既知であれば、予測可能でもある。
シミュレーション実験や暗号などに利用されている。

・ニュートン法
数値解析の分野においてニュートン法は方程式を数値計算によって解くための反復法による球根アルゴリズムの一つである。
まずはじめに予想される真の解に近いと思われる値を一つとる。次にそのグラフの接線を考えそのx切片を計算する。
このx切片の値は予想される真の解に近いものとなるのが一般的である。
以後この値に対してグラフの接戦を考え同じ操作を繰り返すことで解析的に解けない方程式の近似解を与える。

・モンテカルロ法
モンテカルロ法とは、乱数を用いて問題の近似解を求める手法の一つである。
モンテカルロ法は多項式時間で終了することを保証するが、得られた解が必ずしも正しいとは限らない。
モンテカルロ法を用いた数値計算の例としては、円周率の計算が有名である。
これは、[0, 1]x[0, 1] の範囲の乱数を多数生成し、そのうち原点を中心とする円の内部に含まれるものの割合を計算することで π/4 の値を近似的に求めるというものである。


・擬似逆行列
正則でない（逆行列を持たない）行列からなる方程式に対しても
その尤もらしい解を得るための逆行列である。
例えば逆行列を持たない行列の演算Y=XAの指揮に対して、
Xの転置を乗じて、XtY=XtXA、XtXは正方行列になるのでこれが正則であるならば逆行列を持つので、
(XX)^-1=(XX)^-1XXAが成り立つ。右辺のXXは単位行列なので
(XX)^-1XY=Aというように解を求めることができる。


■制御
・PWM制御
PWMとは、半導体を使った電力を制御する方式の１つです。
オンとオフの繰り返しスイッチングを行い、出力される電力を制御します。
一定電圧の入力から、パルス列のオンとオフの一定周期を作り、オンの時間幅を変化させる電力制御方式をＰＷＭと呼びます。
早い周期でスイッチングを行うことで、オンのパルス幅に比例した任意の電圧が得られます。
優れた制御性と、高効率が特長で、インバータ回路で広く使われている技術です。

・PID制御
制御工学におけるフィードバック制御の一種であり、入力値の制御を出力値と目標値の
偏差、積分、微分の3つの要素によって行う方法のことである。
制御理論の一分野をなす古典制御の枠組みで体系化されたもので長い歴史を持っている。
フィードバック制御の基礎ともなっており、産業界では主力の制御手法である。

・フィードバック制御[x]
連続動作するシステムにおいて、前回の入力に対する出力を入力要素の一つとすることで、より精密な出力を得る手法。制御を乱す外的要因(外乱)による影響を自動的に修正できるが、外乱による影響を検出してからでないと修正ができないという欠点が存在する。
フィードフォワード制御は、外乱による影響が現れる前に外乱を検知して修正を行う制御方式。対象となる外乱の影響を最小限にできるが、予期しない外乱に弱く、また一定の状態を維持するといったことができない。
そのため、通常はフィードバック制御とフィードフォワード制御を併用する。

・順運動学と逆運動学
順運動学とは、ロボットの各関節の変位量が与えられた時、ロボットの手先の位置と方向がどのようになるかと求める問題である。
逆運動学とは、ロボットの手先の位置と方向が与えられた時にそれを実現する各関節の変位量を求める問題である。　


■信号
・ウェーブレット変換
基底関数としてウェーブレット関数を用いた周波数解析の手法のひとつ。
フーリエ変換によって周波数特性を求める際に失われる時間領域の情報を残すことが可能。
基底関数の拡大拡小を行うことでフーリエ変換では解析の難しい広い周波数領域の解析が可能である。
」フーリエ変換ではNをデータのサイズとするとO(NlogN)のオーダーで計算量が増えるが、
ウェーブレット変換ではO(N）の計算量でできる｡信号解析や量子力学の分野に応用されている。

・ラプラス変換
関数解析学において積分で定義される関数空間の間の写像の一種。
ラプラス変換によってある種の微分積分は積などの代数的な演算に置き換わるため、
制御工学などにおいて時間領域の関数を別の領域の関数に変換することにより、
計算方法の見通しをよくするための数学的な道具として用いられている。

・ベクトル量子化
情報理論における量子化の手法の総称。
通常の量子化は標本化したアナログ信号の各サンプルに対して最も近い離散値のデジタル符号に置き換えることで行われるのにたいして、ベクトル量子化は複数のサンプルを取り込みそれをまとめて符号化する。
この複数データをベクトルとして扱うためにベクトル量子化と呼ばれる。
近年ではベクトルデータの次数を落とす方法として画像や音声の非可逆圧縮の作成に使われたりする。

・ケプストラム
音のスペクトルを信号とみなしてフーリエ変換した結果である。
複素ケプストラムは最初のスペクトルの振幅と位相に関する情報を保持しており、信号の再構築が可能である。
実数ケプストラムはスペクトルの振幅に関する情報しか保持しない。
ケプストラムは本来自身や爆弾の爆発を原因とする地震生反響の特性を調べるために考案された。
レーダー信号の反射を解析するのにも使われてきた。

・サンプリング周波数変換
サンプリングされた信号に対するリサンプリングの1つで、あるサンプリング周波数で
サンプリングされた信号を別のサンプリング周波数でサンプリングされた信号に変換する処理である。
通常はデジタル信号間の変換だが、サンプリングされていればアナログ信号でもかまわない。
高速フーリエ変換法ではサンプル数Nの原信号に対して高速フーリエ変換と逆変換を行うことでサンプル周波数の変換を行う。

・フーリエ変換
実変数の複素または実数値関数を周波数の関数に移す変換である。
複雑な周期函数は、単純な波動の数学的な表現である正弦関数や余弦関数の和として表される。
正弦や余弦の性質により、この和の積分を行うことで各波の量やフーリエ係数を計算することができる。
よく用いられる公式の一つとして、下記のようなものがある。ゼータは任意の実数
f(ζ) =∫f(x)e^-2πixζ dx
フーリエ級数展開：同じ波形が周期的に流れている
フーリエ変換：波形が周期的に流れていない

・周波数スペクトル
通常の信号波形は，多数の異なった正弦波が合成されたものと見ることができる。
このとき周波数の関数として，各正弦波の周波数成分の振幅，または振幅および
位相を複素数によって表したものを周波数スペクトルという。
複素数の絶対値がその周波数の正弦波の振幅を表し，偏角が位相を表す。

・窓関数
ある有限区間（台）以外で0となる関数である。 ある関数や信号（データ）に窓関数が掛け合わせられると、区間外は0になり、有限区間内だけが残るので、数値解析が容易になる。 窓関数は、スペクトル分析、フィルタ・デザインや、音声圧縮に応用される。 窓関数を単に窓 (window) ともいい、データに窓関数を掛け合わせることを窓を掛ける (windowing) という。実装可能な有限のタップ数を持つフィルタにおいて生じる制約の範囲内で周波数分解能とダイナミックレンジのバランスの調節を行うための関数である。

■セキュリティ
・主成分分析
相関のある多数の変数から相関のない少数で全体のばらつきを最も表す主成分と呼ばれる変数を合成する多変量解析の一手法。データの次元を削減するために用いられる。
主成分を与える変換は、第一主成分の分散を最大化し、続く主成分はそれまでに決定した主成分と直交するという拘束条件のもとで分散を最大化するようにして選ばれる。
主成分の分散を最大化することは観測値の変化に対する説明能力を可能な限り主成分に持たせる目的で行われる。



・標本化定理
アナログ信号をデジタル信号へと交換する際に、どの程度の間隔で標本化すれば良いかを定量的に示す定理。
原信号に含まれる最大周波数成分をfとすると、2fよりも高い周波数fsで標本化した信号は、低域通過フィルターで高域成分を除去することによって原信号を完全に復元できる。
標本化周波数が2f以下であった場合、原信号にはない偽の周波数fs-fがエイリアス信号として復元信号に現れてしまう。


■ネットワーク・セキュリティ
・SSL（secure socket layer）
インターネットなどのコンピュータネットワークにおいてセキュリティを要求される通信を行うためのプロトコルである。主な機能として、通信相手の認証、通信内容の暗号化、改竄の検出を提供する。SSLはIETFによって策定された。
SSLは多くの場合、コネクション型のトランスポート層プロトコル（通常はTCP）とアプリケーション層のあいだにおいて使われる。
SSLは特定のアプリケーション層プロトコルに依存しないため、HTTP以外にも多くのプロトコルにおいて採用され、クレジットカード情報や個人情報、その他の機密情報を通信する際の手段として活用されている。


・標的型攻撃メール
明確な意思と目的を持った人間が特定の組織内の情報を狙って行われるサイバー攻撃の一種。
その組織の構成員宛にコンピュータウィルスが添付された電子メールを送ることなどによって開始される。
攻撃者手法の例として、web等で公表されている情報を加工してメール本文や添付ファイルを作成したり、
組織内の業務連絡メールを加工して本文や添付ファイルを作成したり、日常会話的なメールを
数回繰り返してメール受信者の警戒心を和らげたりする、


・ネットワークセキュリティプロトコルの例（ひとつ。SSLとか？）
インターネットなどのコンピュータネットワークにおいてセキュリティを要求される通信を行うためのプロトコルである。主な機能として、通信相手の認証、通信内容の暗号化、改竄の検出を提供する。SSLはIETFによって策定された。
SSLは多くの場合、コネクション型のトランスポート層プロトコル（通常はTCP）とアプリケーション層のあいだにおいて使われる。
SSLは特定のアプリケーション層プロトコルに依存しないため、HTTP以外にも多くのプロトコルにおいて採用され、クレジットカード情報や個人情報、その他の機密情報を通信する際の手段として活用されている。


・クロスサイトスクリプティング
webアプリケーションの脆弱性を利用した攻撃。
攻撃者の作成したスクリプトを脆弱性のある標的サイトのドメイン権限において閲覧者のブラウザで実行させる攻撃一般を指す。
スクリプトが実行されることにより、不正プログラムの感染、ユーザーを騙す表示によるフィッシング詐欺、クッキー情報の取得によるセッションハイジャックなどにつながる。
ユーザーの対策として、ブラウザのアップデートや不審なURLを安易にクリックしないことが挙げられる。


・分散ハッシュテーブル
主にP2P環境において中央サーバーを必要としないデータ検索を行うシステムを構築する手法。
アイテムとノードのそれぞれにハッシュ値を割り当て、アイテムのハッシュ値に最も近いハッシュ値を持つノードにアイテムを格納する。
検索する際には欲しいアイテムのハッシュ値を計算し、近いハッシュ値を持つノードに順々に問い合わせることで検索を行う。
このようにすることで特的ピアに負荷が集中することなく大規模なコンテンツ探索を実現する。
実現手法としてChord、Can等がある。

・公開鍵基板（PKI）
公開鍵暗号方式や電子署名方式で用いる公開鍵とその持ち主の対応関係を保証するための仕組みである。
本当に相手のものであるかを認証局という第三者機関を用いることで保証する。
例えば、ある公開鍵基板利用者Aが別の利用者Bの公開鍵が本当にBのものであるかを確認する。
その場合にはBに対する公開鍵証明書を入手し、次に公開鍵証明書を発行した認証局Cに対する公開鍵と公開鍵証明書を入手する、同様に繰り返し、最後にトラストアンカーと呼ばれるPKIにおける最も信頼できると思われる認証局Zまでたどり着き、しかもそれまでに入手した公開鍵証明書が正当なものであれば、公開鍵BをBの公開鍵として受理する。


・フィッシング
インターネットのユーザから経済的価値がある情報（ユーザ名、パスワード、クレジットカード情報）を奪うために行われる詐欺行為である。
悪意のある第三者が会員制ウェブサイトや有名企業を装い、本物のウェブtサイトと偽った偽のウェブサイトへのURLリンクを貼ったメールを送りつけクレジットカードや銀行口座の情報を獲得を目的とする。
対策として各種個人情報を入力する際にはドメイン名を確認したり、URLが本物であるかを確認することがあげられる。

・公開鍵暗号を用いたデジタル署名法
書面上の手書き署名のセキュリティを模倣するために用いられる技術。
①鍵ペアを生成する鍵生成アルゴリズム②利用者の秘密鍵を用いて署名を生成するアルゴリズム③利用者の公開鍵を用いて署名を検証するアルゴリズムの3つからなっている。
デジタル署名では電子メールや契約書などの認証機能を提供する。


■アルゴリズム
・分割統治法[x]
そのままでは解決できない大きな問題を小さな問題に分割し、その全てを解決することで最初の問題全体を解決するという問題解決の手法である。実現方法としては、ある関数を再帰的に呼び出すことでそれを構成する小さな問題として扱うやり方がある。
分割統治法の例としてマージソートが挙げられる。ある配列をその中央値で分割することを繰り返し、これ以上分割ができなくなった段階で要素を並び替えて分割したものと結合していく

・B木[x]
木構造からなるデータ構造の一つ。
通常の二分木と違い、一つのノードから複数分岐している平衡木であり、階層の深さが同じになるようにノードの分割と併合を行う。
ブロック単位のランダムアクセスが可能な補助記憶装置上に木構造を実装するのに適している。
また、データベース管理システムの多くはB木による索引を実装している。

・ヒープソート のデータ構造
・分岐限定法

・NP困難（図をもって説明すると良いかも）
計算量理論において「NPに属する任意の問題と比べて少なくとも同等以上に難しい」問題である。
すなわち、非決定性チューリングマシンによって多項式時間で解ける問題と同等以上に難しい問題。
NP完全な問題との違いは、問題の種類が必ずしも判定問題に限らない点にある。
NP困難な問題の例として、巡回セールスマン問題・ナップサック問題などが挙げられる。

・NP完全問題
計算量理論において①クラスNPに属する決定問題であり②任意のクラスNPに属する問題から多項式時間還元可能なものである。
①を満たさない場合にはNP困難な問題とされる。多項式時間還元の推移性から、
クラスNPに属する問題である一つのNP完全問題から多項式時間還元可能なものも、NP完全である。
つまり、「クラスNPのうち最も難しい問題である」ことが言える。
NP完全問題の例として、部分和問題・ハミルトン経路問題などがある。

・巡回セールスマン問題
都市の集合と移動コストが与えられた時、全ての都市をちょうど一度ずつ巡り
出発地に戻る経路の総移動コストが最小のものを求める組み合わせ最適化問題である。
この問題は計算量理論においてNP困難と呼ばれる問題のクラスに属し、
多項式時間のアルゴリズムが見つかりそうにない決定量的に困難な問題である。
実際に全ての経路を計算することで最適解を得る手法は時間計算量はO（n!）であり、都市が20以上になると現実的でない。
応用事例としてより複雑な定義で配送計画などに適用される。


・最短経路問題
重み付きグラフの与えられた2つのノード間を結ぶ経路の中で重みが最小の経路を求める最適化問題である。
2頂点対最短経路問題、単一始点最短経路問題、全点対最短経路問題と種類分けされ、それぞれを解くアルゴリズムとして
ベルマンフォードアルゴリズム、ダイクストラのアルゴリズム、ワーシャルフロイドのアルゴリズムがある。
最短経路問題の応用例としては鉄道案内アプリなどがある。
駅をノード、駅と駅の所要時間を重みとしたエッジとして鉄道経路をグラフ化して最短経路を求めている


・凸包
与えられた集合を含む最小の凸集合である。
Xがユークリッド平面内の有界な点集合の時、その凸包は直感的にはXをゴム膜で包んだ時にゴム膜が作る図形として視認することができる。
凸包を求める問題を実用的な応用としてはパターン認識・画像処理などがある。

■アーキテクチャ・OS
・透過性[x]
機械語プログラムが実装の詳細に影響されない性質のこと。つまり、命令セットだけを意識して機械語プログラムを書けば、効率や安全性はハードウェアが勝手に見てくれる性質のことをいう。キャッシュや仮想記憶、スーパースカラなどの導入で保持される。コンピュータアーキテクチャを実装する際に極めて重要な性質であり、ハードウェア量の増大・速度低下を招いても実現することが好まれる。

・互換性[x]
異なるコンピュータ間で同じ機械語プログラムが同じ動作をする性質。
互換性はコンピュータの世代間や上位会機種の間で保持されるのが望まれる。
世代間のコンピュータでの互換性を保つことは、過去のプログラムが最新のコンピュータで動作することを保証し、システム障害が発生することを防ぐ。CPUチップの設計者は高性能化・低消費電力化とともに過去の
CPUとの互換性を保つために大きな努力を払っている

・TLB
仮想アドレスから物理アドレスへの変化の高速化を図る、MMU内のキャッシュ。
TLBのスロット内に、仮想アドレスから物理アドレスへの変換のためのページテーブルエントリが一部格納されている。
仮想アドレスから物理アwドレスへの変換はページテーブルという巨大な表を引くことになるが、
それ自体がメモリアクセスを伴うためにメモリの読み書きに時間がかかる。
そこでフルアソシエイティブ型のキャッシュであるTLBを設けることでパイプラインを円滑に動作させる。


・OSやプログラムにおけるプロセスとスレッドの違い[x]
プロセスは、実行中のプログラムを抽象化したものであり、リソースの割り当てと保護の単位である。
スレッドは、プロセスの中での実行単位である。例えば、「通信処理」、「画面表示」、「キー入力受付」などの一つのプログラム内の複数処理内の単位である。
一つのプロセス内のメモリは各スレッドで共有ができるが、プロセス間では共有ができない。

・チューリングマシン[x]
計算模型の一つで、計算機を数学的に議論するための単純化・理想化されたモデルである。イギリスの数学者アラン・チューリングの論文「計算可能数についてー決定問題への応用」で発表された。
表面に記号を読み書きできる無限長のテープ、読み書きヘッド、有限オートマトンから構成され、テープの場所から読みだした記号の組み合わせに応じて、テープへの新しい記号の書き込みやヘッドの移動を行う。

・スヌープキャッシュ[x]
分散共有メモリとマルチプロセッサを備えたシステムでキャッシュコヒーレンシを実現するために用いられる技術である。
システムにメインメモリが一つしかない場合でもキャッシュメモリがプロセッサごとに一つずつ存在し、何らかの対策を施さない限り同じメモリが複数のキャッシュにロードされ異なる値を持ってしまう可能性がある。これを防ぐため、各キャッシュコントローラはバスを監視し、バス上に流れるブロードキャストの通知を受け、必要に応じて特定のキャッシュラインを無効にする。

・グリッドコンピューティング[x]
インターネットなどの高域のネットワーク状にあるCPUなどの計算資源を結びつけ、一つの複合したコンピュータシステムとしてサービスを提供する仕組みである。一箇所の計算センターやひと組のスーパーコンピュータでは足りないほどの大規模な計算処理や大量のデータを保存・利用するための手段として開発されている。グリッドの計算資源管理・監視・データ移動などを行うためのミドルウェアとしてGlobusなどがある。

・アウトオブオーダ処理[x]
プロセッサにおいてクロックあたりの実行命令数を増やし性能をあげるための手法の一つ。機械語プログラム中の命令の並び順によらず、データなどの依存関係から見て処理可能な命令について逐次開始・実行・完了させるものである。例えば、二つの命令のうちの先の一つがメインメモリにアクセスする場合、メモリアクセスに時間がかかるためこの分無駄な時間が生まれるが、アウトオブオーダ処理の場合はメモリアクセスの間に他の処理を終わらせることによって処理時間を短縮する。

・クワインマクラスキー法
ブール関数を簡単化するための方法である。
カルノー図と同様の目的で使われるが、コンピュータによる自動化に適しており、またブール関数が最簡形かどうか決定的に求めることができる。
W・V・クワインが提案し、E・J・マクラスキーが発展させた方法なのでこの名がある。
手順は以下の通りである。①関数の主項を全て求める②主項を表にまとめ必須項を求める③最簡形を求める


・RISC型とCISC型プロセッサ
コンピュータアーキテクチャにおける命令セットの種類である。
CISCは命令セットを大きくシアドレシング方式を数多く用意することで目的とする操作をできるだけ1命令で実現し、プログラムの実現効率を上げようという方式である。
これに対してRISCは　命令はよく使われるものだけに限定しアドレシング方式も最小限に絞ってハードウェアを簡単化かし命令実行時間を短くすることで高速化を図るものである。RISCの場合、アドレシングだけでなく命令語は一語の固定長としメモリとCPUのデータのやり取りは原則としてロード命令とストア命令だけとしている。

CISC：複雑な命令を持っているため多種多様な演算が実行可能（パソコン・MF）
回路構成：複雑、コードサイズ：小さい、命令数：多い、動作周波数：低い
RISC：単純で最小限の命令を持っており構造がシンプルな分だけ非常に高速に処理できる（マイコン・携帯）

・パイプラインハザード[x]
命令同士の依存関係などにより、パイプライン化が無駄になる、もしくは不可能となることを指す。
例えば、ある命令が直前の命令結果を利用する場合、直前命令が完了するまでその命令は実行できない。これをデータハザードという。
また、分岐命令が存在するとき、パイプラインを止めて分岐の結果が出るのを待つ必要がある。これを制御ハザードという。

・レジスタリネーミング[x] 
コンピュータのプログラム内でレジスタを再利用しているために不必要な順序性が生じているのを、より多くの実在するレジスタを利用して依存をなくす技術である。
例えば下記順番で命令を実行する際には違う命令にもかかわらず同じレジスタを利用するために後者の命令が止まってしまう。
①②の関係を逆依存、①③を出力依存という。レジスタリネーミングの実現方法としてマッピングテーブル、リオーダバッファ、ソフトウェアで実現するものの3つがある。
①add r1, r2, r3
②add r3, r4, r5
③add r1, r6, r7

メモリアクセス機構
・直列形物理アドレスキャッシュ：TLBで物理アドレスを作成したのちにこれを用いてキャッシュアクセスする。キャッシュサイズやエイリアスの心配ないが遅い。
・並列形物理アドレスキャッシュ：TLBで物理アドレスを生成すると同時にページ内オフセットでキャッシュアクセス。→照合。エイリアスないし遅延無いけどキャッシュサイズが限定される。
・仮想アドレスキャッシュ；TLBで物理アドレス生成すると同時に仮想アドレスでキャッシュアクセス。

・3つのC[x]
①初期参照ミス
キャッシュラインを最初にアクセスする際に起こりうるミス
②競合性ミス
同じインデックスを持つことなるキャッシュラインにアクセスすることで起こりうるミス
③容量性ミス
キャッシュしたいライン数がキャッシュ容量を上回ることで起こりうるミス

・同期回路と非同期回路[x]
デジタル論理回路の設計技術の種類である。
同期式回路：クロックに同期して回路が動作する。
　メリット：動作が安定しやすい
　デメリット：クロックを待つ分反応が遅れる
非同期式回路：入力が変化すると即座に回路が動作する
　メリット：反応が早い
　デメリット：タイミングを上手くとらないと動作が不安定になる

・スーパースカラ[x]
CPUアーキテクチャにおける用語で、複数命令を同時にフェッチし並列に動作させ、プログラムの持つ命令レベルの並列性を利用して、性能向上を図るアーキテクチャである。
同じ並列処理実行方式のVLIWと違い、互換性・等価性を保持したままの並列処理が可能であるが、ハードウェアで並列性の抽出・実行の処理を行うためにその構成が複雑になる。
また、複数命令の間に前の命令の結果を利用するといった依存関係がある場合には同時に実行することができない。

・VLIW[x]
一命令中に複数の演算を入れたアーキテクチャであり、同一命令語中のハザードは全てコンパイラが静的に解決し、命令語の演算は全て同時に実行する。同じ並列処理実行方式のスーパースカラと違い、プロセッサの制御ロジックが簡単かつ高速になるが、機械語プログラムがハードウェアに対して固定されてしまい、互換性がなくなってしまうという問題がある。


・パイプラインハザード
パイプラインハザードとは、命令同士の依存関係によりパイプライン化が無駄になる、もしくは不可能となる事を指す。例えば、ある命令が直前の命令の結果を利用する場合、直前の命令が完了するまでその命令は実行することができない。これをデータハザードと呼ぶ。また、分岐命令が存在するとき、その結果によって実行すべき命令が変わってしまうため、パイプラインを止めて分岐の結果が出るのを待つ必要がある。これを制御ハザード(または分岐ハザード)と言う。


・半加算器[x]
二進数の同じ桁同士の加算を行う演算装置である。
その桁自身の演算結果と桁上がり値を出力する。論理阻止を用いて作ると下記図のようになる。真理値表は以下の通りとなる。

・全加算器[x]
二進数の最下位以外の桁同士の演算をして下位からの桁上げ入力を含めて出力する演算装置である。下位からの桁上げ出力を上位の桁上げ入力に接続することにより任意の桁数の二進数の加算が可能となる。一つの半加算器は2個の半加算器と1個のORから構成される。論理阻止を用いると下記のように表され、真理値表は下記のようになる。

・キャリールックあーヘッド

・クラサバとP2Pの利害得失
クライアント・サーバーシステムは特定のサーバーのみで全てを管理することができるが、
サーバに負担が集中するためクライアントの数が増えると処理が極端に重くなる欠点を持つ。
P2Pシステムではユーザ数が膨大になっても特定のコンピュータに処理が集中することはないため、
非常にスケーラビリティが高いと言える。しかし、P2Pシステムは全てを管理するサーバを持たないため、
特定のデータの削除などが不得意である。また、P2Pシステムはクライアント・サーバーシステムと比べて複雑になりやすく、実装が非常に難しい。


・マイクロプログラム制御方式[x]
CPU内部の処理を小さな命令(マイクロプログラム)と考え、マイクロプログラムを組み合わせることで様々な命令を実現するプロセッサの制御方式。
比較的容易に命令の追加・変更が可能で、異なる命令セットのCPUのエミュレート等も可能である。
しかし、複雑な命令の増加によりパイプライン化が妨げられるなど、実行時間を増加させてしまう欠点がある。



・データベースの正規化
関係データベースの正規化とは、関連するデータをグループ化したり、同一データを重複して持つことが無いようにテーブルを分割・整理したりすることにより、データベースを正規形と呼ばれる形式に統一することを言う。
正規化を行うことで、データの更新による矛盾の発生を防ぐことができ、データの一貫性が保たれる。
正規化されていないデータベースはしばしば非効率であり、データベースの活用の妨げとなる。

正規化のうち特によく知られているのが第1〜第5正規形とボイス・コッド正規形であり、特に第3正規形までのものは実務でもよく用いられている。



・ケプストラム
音のスペクトルを信号とみなしてフーリエ変換した結果。


・自己相関（事故相関関数とパワースペクトル）
信号処理において時間領域信号等の関数や数列を解析するための数学的道具である。
信号がそれ自身を時間シフトした信号とどれだけ良く整合するかを測る。
自己相関は、信号に含まれる繰り返しパターンを探すのに有用であり、例えば、ノイズに埋もれた周期的信号の存在を判定する。
自己相関の応用として光学自己相関器による光のスペクトル測定や超短時間のレーザーパルスの測定などがある。


・リアルタイム性
入力を受けてから出力を完了するまでの処理に時間的制約が設けられている制御の特徴。
例えば、車のエアバッグを制御するシステムでは、車が衝突してから
定められた時間に制御が完了することが制御システムの第一目的であり、
それがなされなければ他の処理の価値はほぼ0になる。
そのために、どのような順番でジョブをよりするかのスケジューリングが重要になる。


・ひずみゲージ[x]
ひずみゲージ（英語: strain gauge）は、物体のひずみを測定するための力学的センサである。ひずみ測定を利用して間接的に、加速度計測や荷重計にも用いられる。ひずみゲージの一種である金属ひずみゲージは薄い絶縁体上にジグザグ形状にレイアウトされた金属の抵抗体（金属箔）が取り付けられた構造をしており、抵抗体の変形に伴う電気抵抗の変化を測定し、これを被測定物のひずみ量に換算する



https://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%97%E3%83%86%E3%82%A3%E3%82%AB%E3%83%AB%E3%83%95%E3%83%AD%E3%83%BC
・今日分散分析








































